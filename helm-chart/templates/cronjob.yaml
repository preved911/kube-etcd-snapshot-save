apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "etcd-snapshot.fullname" . }}
  labels:
    {{- include "etcd-snapshot.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          hostNetwork: true
          containers:
          - name: etcd-snapshot-save
            image: {{ .Values.image.repository }}:{{ .Chart.AppVersion }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            args:
              - --cacert=/etc/kubernetes/pki/etcd/ca.crt
              - --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt
              - --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
              - --endpoints=127.0.0.1:2379
              - --s3.endpoint={{ .Values.s3.endpoint }}
              - --s3.bucket={{ .Values.s3.bucket }}
              - --s3.access-key=$(S3_ACCESS_KEY)
              - --s3.secret-key=$(S3_SECRET_KEY)
              {{ if .Values.s3.prefix }}
              - --s3.prefix={{ .Values.s3.prefix }}
              {{ end }}
            env:
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secret }}
                  key: accesskey
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secret }}
                  key: secretkey
            volumeMounts:
            - mountPath: /etc/kubernetes/pki/etcd
              name: etcd-certs
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /etc/kubernetes/pki/etcd
              type: Directory
            name: etcd-certs
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master

